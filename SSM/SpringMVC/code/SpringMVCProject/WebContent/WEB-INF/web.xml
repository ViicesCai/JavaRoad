<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
  <display-name>SpringMVCProject</display-name>
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
  
  <servlet>
  	<servlet-name>springDispatcherServlet</servlet-name>
  	<!-- 将请求交由 MVC 处理 -->
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  	<!-- 如果该文件在 WEB-INF 下则可以省略 -->
  	<init-param>
  		<!-- 指定 SpringMVC 配置文件 -->
  		<param-name>contextConfigLocation</param-name>    
  		<param-value>classpath:springmvc.xml</param-value>
  	</init-param> 
  	<!-- 启动时，以第一个自动启动 -->
  	<load-on-startup>1</load-on-startup>
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>springDispatcherServlet</servlet-name>
  	<!-- 拦截一切请求 -->
  	<url-pattern>/</url-pattern>
  	<!-- url-pattern：拦截的请求 -->
    <!-- /user: 拦截以 /user 开头的请求 如：user/welcome -->
    <!-- /user/welcome.jsp: 只拦截该请求 -->
    <!-- .jsp: 只拦截 .jsp 结尾的请求 -->
    <!-- 如果定义的请求这里没有拦截到，则不属于 SpringMVC 
    处理：@RuestMapping 映射，将自动交由 Servlet 处理：url-parttern / @WebServlet -->
    
  </servlet-mapping>
  
  <!-- 增加：HiddenHttpMethodFilte 过滤器：使普通浏览器支持 delete/put -->
  <filter>       
  	<filter-name>HiddenHttpMethodFilter</filter-name>
  	<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
  </filter>
  
  <filter-mapping>
  	<filter-name>HiddenHttpMethodFilter</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
</web-app>